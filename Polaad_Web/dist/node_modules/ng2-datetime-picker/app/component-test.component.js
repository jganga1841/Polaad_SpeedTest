"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
moment['locale']('en-ca'); //e.g. fr-ca
var templateStr = "\n    <fieldset><legend><h2>Attributes and Events</h2></legend>\n      <ng2-utils-1>\n        <ng2-datetime-picker\n          date-format=\"DD-MM-YYYY hh:mm\"\n          [date-only]=\"false\"\n          [time-only]=\"false\"\n          [minuteStep]=\"5\"\n          [default-value]=\"defaultValue\"\n          [min-date]=\"minDate\"\n          [max-date]=\"maxDate\"\n          [min-hour]=\"9\"\n          [max-hour]=\"17\"\n          [disabled-dates]=\"disabledDates\"\n          (selected$)=\"selectedDate = $event\">\n        </ng2-datetime-picker>\n        <br/> selected DateTime : {{ selectedDate || defaultValue }}\n      </ng2-utils-1>\n      <pre>{{templateStr | htmlCode:'ng2-utils-1'}}</pre>\n    </fieldset>\n";
var ComponentTestComponent = (function () {
    function ComponentTestComponent() {
        this.templateStr = templateStr;
        this.defaultValue = new Date(2017, 0, 31, 21, 45);
        this.minDate = new Date(2017, 0, 1);
        this.maxDate = new Date(2017, 11, 31);
        this.disabledDates = [new Date(2016, 11, 26), new Date(2016, 11, 27)];
    }
    return ComponentTestComponent;
}());
ComponentTestComponent = __decorate([
    core_1.Component({
        selector: 'my-app',
        template: templateStr,
        encapsulation: core_1.ViewEncapsulation.None,
        styles: ["\n    fieldset {display: inline-block; vertical-align: top; margin: 10px; padding: 20px }\n  "]
    })
], ComponentTestComponent);
exports.ComponentTestComponent = ComponentTestComponent;
//# sourceMappingURL=component-test.component.js.map