"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
//noinspection TypeScriptCheckImport
var ng2_datetime_picker_1 = require("ng2-datetime-picker");
moment['locale']('en-ca'); //e.g. fr-ca
var templateStr = "\n  <div id=\"my-div\">\n    <h1>Ng2 DateTime Picker Test</h1>\n\n    <fieldset id=\"test1\"><legend><h2>Open from a button</h2></legend>\n      <ng2-utils-1>\n        <input [(ngModel)]=\"date1\" />\n        <i class=\"fa fa-calendar\"\n           ng2-datetime-picker\n           [default-value]=\"date1DefaultValue\"\n           (valueChanged)=\"date1=$event\"></i>\n      </ng2-utils-1>\n      date1: {{date1}}\n      <pre>{{templateStr | htmlCode:'ng2-utils-1'}}</pre>\n    </fieldset>\n\n    <fieldset id=\"test2\"><legend><h2>min date, max date, disabled dates</h2></legend>\n      <ng2-utils-2>\n        <input\n          [(ngModel)]=\"date2\"\n          ng2-datetime-picker\n          [disabled-dates]=\"date2DisabledDates\"\n          [min-date]=\"date2MinDate\"\n          [max-date]=\"date2MaxDate\"\n          date-only=\"true\"/>\n        date2: {{date2}}\n      </ng2-utils-2>\n      <a href=\"javascript:void(0)\" (click)=\"myDate=defaultValue\">set myDate</a><br/>\n      <pre>{{templateStr | htmlCode:'ng2-utils-2'}}</pre>\n    </fieldset>\n\n    <fieldset id=\"test3\"><legend><h2>time only</h2></legend>\n      <ng2-utils-4>\n        <input [(ngModel)]=\"date3\"\n          ng2-datetime-picker\n          date-format=\"DD-MM-YYYY hh:mm\"\n          time-only=\"true\"\n          minute-step=\"5\"\n          (popupClosed)=\"doOnClose($event)\"\n          close-on-select=\"false\" />\n      </ng2-utils-4>\n      <pre>{{templateStr | htmlCode:'ng2-utils-4'}}</pre>\n    </fieldset>\n\n    <fieldset id=\"test4\"><legend><h2>with timezone</h2></legend>\n      <ng2-utils-6>\n        <input\n          [(ngModel)]=\"date4\"\n          ng2-datetime-picker\n          [date-format]=\"date4TimezoneFormat\" />\n          dateWithTimezone: {{dateWithTimezone}}\n        <br/>\n      </ng2-utils-6>\n      <pre>{{templateStr | htmlCode:'ng2-utils-6'}}</pre>\n    </fieldset>\n\n    <fieldset id=\"test5\"><legend><h2>Reactive form</h2></legend>\n      <ng2-utils-3>\n        <form [formGroup]=\"myForm\">\n            <input\n              required\n              formControlName=\"date\"\n              ng2-datetime-picker\n              close-on-select=\"false\"/>\n        </form>\n        myForm.controls.date.value: {{myForm.controls.date.value}}\n        <br/>myForm.value: {{myForm.value | json}}\n        <br/>myForm.dirty: {{myForm.dirty}}\n        <br/>myForm.controls.date.dirty: {{myForm.controls.date.dirty}}\n        <br/>\n        <a href=\"javascript:void()\"\n          (click)=\"myForm.controls.date.patchValue('2015-06-30')\">\n          2015-06-30\n        </a>\n        <a href=\"javascript:void()\"\n          (click)=\"myForm.controls.date.patchValue('2015-07-19')\">\n          2015-07-19\n        </a>\n        <a href=\"javascript:void()\"\n          (click)=\"myForm.controls.date.patchValue('2015-12-31')\">\n          2015-12-31\n        </a>\n      </ng2-utils-3>\n      <pre>{{templateStr | htmlCode:'ng2-utils-3'}}</pre>\n    </fieldset>\n\n  </div>\n";
var DirectiveTestComponent = (function () {
    function DirectiveTestComponent(fb) {
        this.fb = fb;
        this.templateStr = templateStr;
        this.date1 = null;
        this.date1DefaultValue = new Date(2014, 11, 31, 21, 45, 59);
        this.date2 = new Date(2017, 0, 28);
        this.date2DisabledDates = [new Date(2017, 0, 10), new Date(2017, 0, 20)];
        this.date2MinDate = new Date(2017, 0, 1);
        this.date2MaxDate = new Date(2017, 11, 31);
        this.date3 = new Date("Thu Jan 01 2015 00:00:00 GMT-0500 (EST)");
        this.date4TimezoneFormat = 'DD/MM/YYYY HH:mm Z';
        this.date4 = ng2_datetime_picker_1.Ng2Datetime.formatDate(ng2_datetime_picker_1.Ng2Datetime.parseDate('2017-01-15T14:22:00-06:00', this.date4TimezoneFormat), this.date4TimezoneFormat);
    }
    DirectiveTestComponent.prototype.ngOnInit = function () {
        this.myForm = this.fb.group({
            date: ['2016-02-15', [forms_1.Validators.required]],
        });
        //moment.tz.setDefault('US/Central'); // Set the default timezone that moment will use
    };
    DirectiveTestComponent.prototype.doOnClose = function (event) {
        alert(" Do something on close ");
    };
    return DirectiveTestComponent;
}());
DirectiveTestComponent = __decorate([
    core_1.Component({
        selector: 'my-app',
        template: templateStr,
        encapsulation: core_1.ViewEncapsulation.None,
        styles: ["\n    ng2-utils-1 .ng2-datetime-picker-wrapper { display: inline-block }\n    div { font-family: Courier; font-size: 13px}\n    input { min-width: 200px; font-size: 15px; }\n    input.ng-dirty { background: #ddd; }\n    fieldset {display: inline-block; vertical-align: top; margin: 10px; padding: 20px }\n  "]
    }),
    __metadata("design:paramtypes", [forms_1.FormBuilder])
], DirectiveTestComponent);
exports.DirectiveTestComponent = DirectiveTestComponent;
//# sourceMappingURL=directive-test.component.js.map